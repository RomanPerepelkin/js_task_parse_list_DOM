{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAmBQ,EAnBJ,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAqB,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEnD,SAAS,EAAS,CAAG,EACnB,OAAO,WAAW,EAAI,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,IAClD,CASE,EANwB,AA8BjB,EA9BsB,IAAI,CAAC,SAAC,CAAA,CAAM,CAAzC,EACE,OAAO,EAAS,EAAK,OAAO,CAAC,MAAM,EAAI,EAAS,EAAK,OAAO,CAAC,MAAM,EAC/D,GACA,CACN,GAUA,CAFM,EAAO,SAAS,aAAa,CAAC,OAE/B,SAAS,CAAG,GAEjB,EAAe,OAAO,CAAC,SAAC,CAAxB,EAAiC,OAAA,EAAK,WAAW,CAAC,E,GAEhC,EAAe,GAAG,CAAC,SAAC,CAAtC,EACE,MAAO,CACL,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAS,EAAK,OAAO,CAAC,MAAM,EACpC,IAAK,SAAS,EAAK,OAAO,CAAC,GAAG,CAAE,GAClC,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar employeesItems = _to_consumable_array(document.querySelectorAll(\"li\"));\nfunction parseStr(str) {\n    return parseFloat(str.substr(1).split(\",\").join(\"\"));\n}\nfunction sortList(list) {\n    var employeesSorted = list.sort(function(emp1, emp2) {\n        return parseStr(emp1.dataset.salary) > parseStr(emp2.dataset.salary) ? -1 : 1;\n    });\n    employeesItems = employeesSorted;\n    return employeesItems;\n}\nfunction getEmployees() {\n    var list = document.querySelector(\"ul\");\n    list.innerHTML = \"\";\n    employeesItems.forEach(function(item) {\n        return list.appendChild(item);\n    });\n    var employees = employeesItems.map(function(item) {\n        return {\n            name: item.textContent.trim(),\n            position: item.dataset.position,\n            salary: parseStr(item.dataset.salary),\n            age: parseInt(item.dataset.age, 10)\n        };\n    });\n    return employees;\n}\nsortList(employeesItems);\ngetEmployees();\n\n//# sourceMappingURL=index.0da88161.js.map\n","'use strict';\n\nlet employeesItems = [...document.querySelectorAll('li')];\n\nfunction parseStr(str) {\n  return parseFloat(str.substr(1).split(',').join(''));\n}\n\nfunction sortList(list) {\n  const employeesSorted = list.sort((emp1, emp2) => {\n    return parseStr(emp1.dataset.salary) > parseStr(emp2.dataset.salary)\n      ? -1\n      : 1;\n  });\n\n  employeesItems = employeesSorted;\n\n  return employeesItems;\n}\n\nfunction getEmployees() {\n  const list = document.querySelector('ul');\n\n  list.innerHTML = '';\n\n  employeesItems.forEach((item) => list.appendChild(item));\n\n  const employees = employeesItems.map((item) => {\n    return {\n      name: item.textContent.trim(),\n      position: item.dataset.position,\n      salary: parseStr(item.dataset.salary),\n      age: parseInt(item.dataset.age, 10),\n    };\n  });\n\n  return employees;\n}\n\nsortList(employeesItems);\ngetEmployees();\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","list","employeesItems","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","parseStr","str","parseFloat","substr","split","join","sort","emp1","emp2","dataset","salary","querySelector","innerHTML","forEach","item","appendChild","map","textContent","trim","position","age","parseInt"],"version":3,"file":"index.0da88161.js.map"}